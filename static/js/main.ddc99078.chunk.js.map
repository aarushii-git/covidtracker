{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Statewise","useState","data","setData","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","map","curElem","ind","state","confirmed","recovered","deaths","active","lastupdatedtime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA8DeA,EA3DG,WAChB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,sEACDC,MAAM,0CADL,cACbC,EADa,gBAEMA,EAAIC,OAFV,OAEbC,EAFa,OAGnBC,QAAQC,IAAIF,EAAWG,WACvBT,EAAQM,EAAWG,WAJA,2CAAH,qDAWlB,OAJAC,qBAAU,WACRT,MACC,IAGD,mCACE,sBAAKU,UAAU,uBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAIA,UAAU,mBAAd,UACG,IACD,sBAAMA,UAAU,mBAAhB,gCAFF,0BAMF,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,wBAAOA,UAAU,oBAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,yCACA,6CACA,6CACA,0CACA,0CACA,gDAGJ,gCACGZ,EAAKa,KAAI,SAACC,EAASC,GAClB,OACE,+BACE,mCAAMD,EAAQE,MAAd,OACA,mCAAMF,EAAQG,UAAd,OACA,mCAAMH,EAAQI,UAAd,OACA,mCAAMJ,EAAQK,OAAd,OACA,mCAAML,EAAQM,OAAd,OACA,mCAAMN,EAAQO,gBAAd,SANON,qBC/BdO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ddc99078.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Statewise = () => {\n  const [data, setData] = useState([]);\n\n  const getCovidData = async () => {\n    const res = await fetch(\"https://api.covid19india.org/data.json\");\n    const actualData = await res.json();\n    console.log(actualData.statewise);\n    setData(actualData.statewise);\n  };\n\n  useEffect(() => {\n    getCovidData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"container-fluid mt-5\">\n        <div className=\"main-heading\">\n          <h1 className=\"mb-5 text-center\">\n            {\" \"}\n            <span className=\"font-weight-bold\">ðŸ”´ LIVE </span>COVID-19 DASHBOARD\n          </h1>\n        </div>\n\n        <div className=\"box-container\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-hover\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th> State </th>\n                  <th> Confirmed </th>\n                  <th> recovered </th>\n                  <th> deaths </th>\n                  <th> active </th>\n                  <th> updated </th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((curElem, ind) => {\n                  return (\n                    <tr key={ind}>\n                      <th> {curElem.state} </th>\n                      <td> {curElem.confirmed} </td>\n                      <td> {curElem.recovered} </td>\n                      <td> {curElem.deaths} </td>\n                      <td> {curElem.active} </td>\n                      <td> {curElem.lastupdatedtime} </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Statewise;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}